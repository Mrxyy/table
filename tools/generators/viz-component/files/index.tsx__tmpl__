import { VizComponent } from '../../../types/plugin';
import { VersionBasedMigrator } from '../../plugin-data-migrator';
import { Viz<%= pascalcase(name) %> } from './viz-<%= dashcase(name) %>';
import { Viz<%= pascalcase(name) %>Panel } from './viz-<%= dashcase(name) %>-panel';
import { DEFAULT_CONFIG, I<%= pascalcase(name) %>Conf } from './type';

class Viz<%= pascalcase(name) %>Migrator extends VersionBasedMigrator {
  readonly VERSION = 1;

  configVersions(): void {
    this.version(1, (data: any) => {
      return {
        version: 1,
        config: data,
      };
    });
  }

}

type ConfigType = {
  version: number;
  config: I<%= pascalcase(name) %>Conf;
};

export const <%= pascalcase(name) %>VizComponent: VizComponent = {
  displayName: '<%= pascalcase(name) %>',
  displayGroup: 'Others',
  migrator: new Viz<%= pascalcase(name) %>Migrator(),
  name: '<%= camelcase(name) %>',
  viewRender: Viz<%= pascalcase(name) %>,
  configRender: Viz<%= pascalcase(name) %>Panel,
  createConfig: (): ConfigType => ({ version: 1, config: DEFAULT_CONFIG }),
};
